//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""ControlsRotation"",
            ""id"": ""4d98d172-6688-4364-a14c-71a2d702a26a"",
            ""actions"": [
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""c38de777-3e70-4b66-9da8-5c3b4a39c9fc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""JumpTrick"",
                    ""type"": ""Button"",
                    ""id"": ""710c5c8e-1dd6-4470-81fd-b23638f7a967"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drift [Gamepad]"",
                    ""type"": ""Button"",
                    ""id"": ""f7429413-1bb7-4a30-8c55-cca81367a760"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Boost"",
                    ""type"": ""Button"",
                    ""id"": ""88639ba1-f0f6-414f-a5f0-5e4763a2d276"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot [Mouse]"",
                    ""type"": ""Button"",
                    ""id"": ""527e01ef-83de-4538-9f8d-9cca2c4a2604"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimAndShoot [Gamepad]"",
                    ""type"": ""Value"",
                    ""id"": ""d60f29a8-0637-42e0-a02b-effd7786f09e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis [Keyboard]"",
                    ""id"": ""da6db8ac-57c9-421f-b988-e63b4e4131f9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""9185812c-ac75-44b7-aeb3-2371351dbfdc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b25ead73-9969-48cb-9515-f500f172d733"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis [Gamepad]"",
                    ""id"": ""6f424edb-1703-49f8-9a9a-4e5b25e27113"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""65e3b4bd-d29f-4a12-979f-d6b879755351"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5a60e70d-5bf4-4377-8646-b3908aa3b3ab"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""52a96f20-4db5-4800-babb-72df1aa3fb58"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Hold(duration=0.01)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpTrick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6589abc5-86c6-4844-a123-22f52abf78d6"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": ""Hold(duration=0.01)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpTrick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ed408ec-421d-4c9f-ac7a-61ce743d5da8"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Hold(duration=0.025)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drift [Gamepad]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04c8aab3-089b-410a-900e-f0b1db8eb96d"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": ""Hold(duration=0.025)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drift [Gamepad]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f07daca6-3315-4f11-b6fe-4eedd4f05263"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Hold(duration=0.01)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3c8834d-fadf-4731-8839-62b78cfcb630"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": ""Hold(duration=0.01)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd36d56b-01d5-4f92-8d32-0672391beb68"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": ""Hold(duration=0.01)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c685ba1-af98-49bc-a2ef-6269469d1238"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold(duration=1.401298E-45)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot [Mouse]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0b8f072c-a00b-4c68-a644-f17b878cc375"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": ""Hold(duration=0.025)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimAndShoot [Gamepad]"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b7b72cfe-26d9-4985-a531-8f43703679c8"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimAndShoot [Gamepad]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9917ddfa-55a3-4fca-8739-f0cee9e9cbc1"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimAndShoot [Gamepad]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""14ece3f7-a7f4-45d9-935d-c57cf21a60ca"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimAndShoot [Gamepad]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a659ce69-3eae-44be-95da-f8262bdf7395"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimAndShoot [Gamepad]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""ControlsDirection"",
            ""id"": ""f4402474-154c-4eed-986e-5b45cd75c3ca"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""820b49f3-ec11-4533-9a40-6f2f813964ce"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""JumpTrick"",
                    ""type"": ""Button"",
                    ""id"": ""067a5f3e-d7b0-434f-97a9-99e71a7fa4d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drift [Gamepad]"",
                    ""type"": ""Button"",
                    ""id"": ""dc9ca789-7c52-4c8a-b608-7d18ac51b268"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Boost"",
                    ""type"": ""Button"",
                    ""id"": ""8ffcc977-7de9-4fca-863b-3e343a2f1f11"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot [Mouse]"",
                    ""type"": ""Button"",
                    ""id"": ""442352ea-2737-49d2-853c-0ab8070ab347"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimAndShoot [Gamepad]"",
                    ""type"": ""Value"",
                    ""id"": ""a695abf9-0cb9-426c-bef4-ea4f0f285f45"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector [Keyboard]"",
                    ""id"": ""98f65928-bcfd-470b-80ae-02550993392e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""134c3aa5-a1bb-4ec6-8bf7-5fb3f85808a0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""87691da1-4421-4c19-8f1d-6046b5f58b5b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7b242695-2050-4064-8ed3-e6ff167264af"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2ba12fca-1f73-4b72-a32a-3c84ae16dc44"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector [Gamepad]"",
                    ""id"": ""45baed9f-772e-471c-824b-13855fe008ed"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""332d6448-5c2c-4aa7-a8a1-80ff5ce836b0"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""06dbf6c9-2b8b-4214-9728-84807523ebf1"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e89016bd-acb5-4d27-8bc7-bcd0f10a51ad"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b1d83895-a3b3-4c87-b423-1ed12fc26e3b"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""206682a0-4667-4e42-9b62-1b016d33bcb2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Hold(duration=0.025)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpTrick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d61493a3-4a7f-4ca0-922d-09fd9f3e756b"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpTrick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10706b6c-5562-48e6-8555-130757112ba0"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Hold(duration=0.025)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drift [Gamepad]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9b8ae88-6499-4a04-b23f-d3949be8fdfa"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": ""Hold(duration=0.025)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drift [Gamepad]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c007b00-edc6-4b87-94fb-d631aa74234f"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Hold(duration=0.1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5468c1e3-ac31-4b54-ba82-b21cebee19db"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": ""Hold(duration=0.025)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14750e77-d74a-46ed-ac78-08e59b39000a"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": ""Hold(duration=0.025)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a6555b0-356c-432c-a7d0-444c27c805f2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold(duration=1.401298E-45)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot [Mouse]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""afe7c019-c60b-4d9f-bdf7-2df6ab4c34a7"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": ""Hold(duration=0.025)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimAndShoot [Gamepad]"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5b7c110c-67c9-453d-8a71-848a6ee5cb51"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimAndShoot [Gamepad]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7328ed34-a58d-4403-bb97-2d9cb9c58399"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimAndShoot [Gamepad]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8df81f64-ff07-46fd-92d8-f6666e9d3f15"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimAndShoot [Gamepad]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""70034ad6-6c91-4f87-8c97-ae6f92f1bd4d"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimAndShoot [Gamepad]"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ControlsRotation
        m_ControlsRotation = asset.FindActionMap("ControlsRotation", throwIfNotFound: true);
        m_ControlsRotation_Rotate = m_ControlsRotation.FindAction("Rotate", throwIfNotFound: true);
        m_ControlsRotation_JumpTrick = m_ControlsRotation.FindAction("JumpTrick", throwIfNotFound: true);
        m_ControlsRotation_DriftGamepad = m_ControlsRotation.FindAction("Drift [Gamepad]", throwIfNotFound: true);
        m_ControlsRotation_Boost = m_ControlsRotation.FindAction("Boost", throwIfNotFound: true);
        m_ControlsRotation_ShootMouse = m_ControlsRotation.FindAction("Shoot [Mouse]", throwIfNotFound: true);
        m_ControlsRotation_AimAndShootGamepad = m_ControlsRotation.FindAction("AimAndShoot [Gamepad]", throwIfNotFound: true);
        // ControlsDirection
        m_ControlsDirection = asset.FindActionMap("ControlsDirection", throwIfNotFound: true);
        m_ControlsDirection_Move = m_ControlsDirection.FindAction("Move", throwIfNotFound: true);
        m_ControlsDirection_JumpTrick = m_ControlsDirection.FindAction("JumpTrick", throwIfNotFound: true);
        m_ControlsDirection_DriftGamepad = m_ControlsDirection.FindAction("Drift [Gamepad]", throwIfNotFound: true);
        m_ControlsDirection_Boost = m_ControlsDirection.FindAction("Boost", throwIfNotFound: true);
        m_ControlsDirection_ShootMouse = m_ControlsDirection.FindAction("Shoot [Mouse]", throwIfNotFound: true);
        m_ControlsDirection_AimAndShootGamepad = m_ControlsDirection.FindAction("AimAndShoot [Gamepad]", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ControlsRotation
    private readonly InputActionMap m_ControlsRotation;
    private IControlsRotationActions m_ControlsRotationActionsCallbackInterface;
    private readonly InputAction m_ControlsRotation_Rotate;
    private readonly InputAction m_ControlsRotation_JumpTrick;
    private readonly InputAction m_ControlsRotation_DriftGamepad;
    private readonly InputAction m_ControlsRotation_Boost;
    private readonly InputAction m_ControlsRotation_ShootMouse;
    private readonly InputAction m_ControlsRotation_AimAndShootGamepad;
    public struct ControlsRotationActions
    {
        private @PlayerControls m_Wrapper;
        public ControlsRotationActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Rotate => m_Wrapper.m_ControlsRotation_Rotate;
        public InputAction @JumpTrick => m_Wrapper.m_ControlsRotation_JumpTrick;
        public InputAction @DriftGamepad => m_Wrapper.m_ControlsRotation_DriftGamepad;
        public InputAction @Boost => m_Wrapper.m_ControlsRotation_Boost;
        public InputAction @ShootMouse => m_Wrapper.m_ControlsRotation_ShootMouse;
        public InputAction @AimAndShootGamepad => m_Wrapper.m_ControlsRotation_AimAndShootGamepad;
        public InputActionMap Get() { return m_Wrapper.m_ControlsRotation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControlsRotationActions set) { return set.Get(); }
        public void SetCallbacks(IControlsRotationActions instance)
        {
            if (m_Wrapper.m_ControlsRotationActionsCallbackInterface != null)
            {
                @Rotate.started -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnRotate;
                @Rotate.performed -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnRotate;
                @Rotate.canceled -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnRotate;
                @JumpTrick.started -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnJumpTrick;
                @JumpTrick.performed -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnJumpTrick;
                @JumpTrick.canceled -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnJumpTrick;
                @DriftGamepad.started -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnDriftGamepad;
                @DriftGamepad.performed -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnDriftGamepad;
                @DriftGamepad.canceled -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnDriftGamepad;
                @Boost.started -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnBoost;
                @Boost.performed -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnBoost;
                @Boost.canceled -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnBoost;
                @ShootMouse.started -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnShootMouse;
                @ShootMouse.performed -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnShootMouse;
                @ShootMouse.canceled -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnShootMouse;
                @AimAndShootGamepad.started -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnAimAndShootGamepad;
                @AimAndShootGamepad.performed -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnAimAndShootGamepad;
                @AimAndShootGamepad.canceled -= m_Wrapper.m_ControlsRotationActionsCallbackInterface.OnAimAndShootGamepad;
            }
            m_Wrapper.m_ControlsRotationActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Rotate.started += instance.OnRotate;
                @Rotate.performed += instance.OnRotate;
                @Rotate.canceled += instance.OnRotate;
                @JumpTrick.started += instance.OnJumpTrick;
                @JumpTrick.performed += instance.OnJumpTrick;
                @JumpTrick.canceled += instance.OnJumpTrick;
                @DriftGamepad.started += instance.OnDriftGamepad;
                @DriftGamepad.performed += instance.OnDriftGamepad;
                @DriftGamepad.canceled += instance.OnDriftGamepad;
                @Boost.started += instance.OnBoost;
                @Boost.performed += instance.OnBoost;
                @Boost.canceled += instance.OnBoost;
                @ShootMouse.started += instance.OnShootMouse;
                @ShootMouse.performed += instance.OnShootMouse;
                @ShootMouse.canceled += instance.OnShootMouse;
                @AimAndShootGamepad.started += instance.OnAimAndShootGamepad;
                @AimAndShootGamepad.performed += instance.OnAimAndShootGamepad;
                @AimAndShootGamepad.canceled += instance.OnAimAndShootGamepad;
            }
        }
    }
    public ControlsRotationActions @ControlsRotation => new ControlsRotationActions(this);

    // ControlsDirection
    private readonly InputActionMap m_ControlsDirection;
    private IControlsDirectionActions m_ControlsDirectionActionsCallbackInterface;
    private readonly InputAction m_ControlsDirection_Move;
    private readonly InputAction m_ControlsDirection_JumpTrick;
    private readonly InputAction m_ControlsDirection_DriftGamepad;
    private readonly InputAction m_ControlsDirection_Boost;
    private readonly InputAction m_ControlsDirection_ShootMouse;
    private readonly InputAction m_ControlsDirection_AimAndShootGamepad;
    public struct ControlsDirectionActions
    {
        private @PlayerControls m_Wrapper;
        public ControlsDirectionActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_ControlsDirection_Move;
        public InputAction @JumpTrick => m_Wrapper.m_ControlsDirection_JumpTrick;
        public InputAction @DriftGamepad => m_Wrapper.m_ControlsDirection_DriftGamepad;
        public InputAction @Boost => m_Wrapper.m_ControlsDirection_Boost;
        public InputAction @ShootMouse => m_Wrapper.m_ControlsDirection_ShootMouse;
        public InputAction @AimAndShootGamepad => m_Wrapper.m_ControlsDirection_AimAndShootGamepad;
        public InputActionMap Get() { return m_Wrapper.m_ControlsDirection; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControlsDirectionActions set) { return set.Get(); }
        public void SetCallbacks(IControlsDirectionActions instance)
        {
            if (m_Wrapper.m_ControlsDirectionActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnMove;
                @JumpTrick.started -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnJumpTrick;
                @JumpTrick.performed -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnJumpTrick;
                @JumpTrick.canceled -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnJumpTrick;
                @DriftGamepad.started -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnDriftGamepad;
                @DriftGamepad.performed -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnDriftGamepad;
                @DriftGamepad.canceled -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnDriftGamepad;
                @Boost.started -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnBoost;
                @Boost.performed -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnBoost;
                @Boost.canceled -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnBoost;
                @ShootMouse.started -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnShootMouse;
                @ShootMouse.performed -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnShootMouse;
                @ShootMouse.canceled -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnShootMouse;
                @AimAndShootGamepad.started -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnAimAndShootGamepad;
                @AimAndShootGamepad.performed -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnAimAndShootGamepad;
                @AimAndShootGamepad.canceled -= m_Wrapper.m_ControlsDirectionActionsCallbackInterface.OnAimAndShootGamepad;
            }
            m_Wrapper.m_ControlsDirectionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @JumpTrick.started += instance.OnJumpTrick;
                @JumpTrick.performed += instance.OnJumpTrick;
                @JumpTrick.canceled += instance.OnJumpTrick;
                @DriftGamepad.started += instance.OnDriftGamepad;
                @DriftGamepad.performed += instance.OnDriftGamepad;
                @DriftGamepad.canceled += instance.OnDriftGamepad;
                @Boost.started += instance.OnBoost;
                @Boost.performed += instance.OnBoost;
                @Boost.canceled += instance.OnBoost;
                @ShootMouse.started += instance.OnShootMouse;
                @ShootMouse.performed += instance.OnShootMouse;
                @ShootMouse.canceled += instance.OnShootMouse;
                @AimAndShootGamepad.started += instance.OnAimAndShootGamepad;
                @AimAndShootGamepad.performed += instance.OnAimAndShootGamepad;
                @AimAndShootGamepad.canceled += instance.OnAimAndShootGamepad;
            }
        }
    }
    public ControlsDirectionActions @ControlsDirection => new ControlsDirectionActions(this);
    public interface IControlsRotationActions
    {
        void OnRotate(InputAction.CallbackContext context);
        void OnJumpTrick(InputAction.CallbackContext context);
        void OnDriftGamepad(InputAction.CallbackContext context);
        void OnBoost(InputAction.CallbackContext context);
        void OnShootMouse(InputAction.CallbackContext context);
        void OnAimAndShootGamepad(InputAction.CallbackContext context);
    }
    public interface IControlsDirectionActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJumpTrick(InputAction.CallbackContext context);
        void OnDriftGamepad(InputAction.CallbackContext context);
        void OnBoost(InputAction.CallbackContext context);
        void OnShootMouse(InputAction.CallbackContext context);
        void OnAimAndShootGamepad(InputAction.CallbackContext context);
    }
}
